name: release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-2025
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Detect csproj
        id: csproj
        uses: ./.github/actions/detect-csproj

      - name: Set CSProj Version
        uses: KageKirin/set-csproj-version@v1.0.0
        with:
          file: ${{ steps.csproj.outputs.csproj_name }}.csproj
          version: ${{ github.event.release.tag_name }}

      - name: Publish
        run: dotnet publish --artifacts-path "C:\out"

      - name: Get AssemblyName
        id: asm
        uses: ./.github/actions/get-assembly-name
        with:
          csproj: ${{ steps.csproj.outputs.csproj_name }}

      - name: Remove msstore source
        run: winget source remove msstore

      - name: Install Mono
        run: winget install -e --id Mono.Mono --accept-package-agreements --accept-source-agreements --disable-interactivity

      - name: PDB2MDB
        shell: cmd
        run: >
          "C:\Program Files\Mono\bin\pdb2mdb.bat"
          "C:\out\publish\${{ steps.csproj.outputs.csproj_name }}\debug\${{ steps.asm.outputs.assembly_name }}.dll"

      - name: Zip build
        shell: pwsh
        run: |
          $src = "C:\out\publish\${{ steps.csproj.outputs.csproj_name }}\debug"
          $dst = "C:\out\build-${{ github.event.release.tag_name }}.zip"
          if (Test-Path $dst) { Remove-Item $dst -Force }
          Compress-Archive -Path "$src\*" -DestinationPath $dst -Force
    
      - name: Upload zipped build
        uses: actions/upload-artifact@v4
        with:
          name: build-zip-${{ github.run_number }}
          path: C:\out\build-${{ github.event.release.tag_name }}.zip
          if-no-files-found: error
